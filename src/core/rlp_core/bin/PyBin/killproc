#!/usr/bin/env python3

import os
import sys
import pprint
import subprocess

name = 'rlp_site_server'


def get_pid(ps_str):
    print(ps_str)
    parts = ps_str.split(' ')
    parts = [p for p in parts if p] # remove empty strings
    # print(parts)
    pid = int(parts[1])
    return pid
    
def main():

    if len(sys.argv) != 2:
        print('killproc NAME')
        sys.exit(1)


    name = sys.argv[1]
    print('Attempting to kill process named: {}'.format(name))


    result = subprocess.check_output('ps -ef | grep {}'.format(name), shell=True).decode('utf-8')

    found_entries = []
    for entry in result.split('\n'):
        if 'ps' in entry:
            continue
        if 'grep' in entry:
            continue
        if 'killproc' in entry:
            continue
        if not entry:
            continue

        found_entries.append(entry)


    if len(found_entries) == 1:
        pid = get_pid(found_entries[0])

        print('Found PID: {}'.format(pid))
        kill_cmd = 'kill -9 {}'.format(pid)
        print(kill_cmd)
        os.system(kill_cmd)

    else:
        print('Kill failed, got {} entries'.format(len(found_entries)))
        pid_list = [str(get_pid(entry)) for entry in found_entries]
        kill_cmd = 'kill -9 {}'.format(' '.join(pid_list))
        print('')
        print(kill_cmd)


if __name__ == '__main__':
    main()